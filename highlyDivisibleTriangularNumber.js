// The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

// 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

// Let us list the factors of the first seven triangle numbers:

//  1: 1
//  3: 1,3
//  6: 1,2,3,6
// 10: 1,2,5,10
// 15: 1,3,5,15
// 21: 1,3,7,21
// 28: 1,2,4,7,14,28
// We can see that 28 is the first triangle number to have over five divisors.

// What is the value of the first triangle number to have over five hundred divisors?


//WIP


function isPrime(n){
  if(n < 2) return false;
  if(n == 2) return true;
  if(n % 2 == 0) return false;
  for(var i=3; (i*i) <= n; i+=2) {
  	if(n % i == 0) return false;
  }
  return true;
}

function nthTriangleNumber(n){
  sum = 0;
  for(t=0;t<=n;t++){
  	sum = sum + t;
  }

  return sum;
}

function howManyDivisors(n){
  divs = [];
  for(d=1;d<=n/2;d++){
  	if(n % d == 0){
  	  divs.push(d);
  	}
  }

  divs.push(n);

  return divs.length;
}

var i = 1;
var divNum = 0;

while(divNum < 500){
  var triNum = nthTriangleNumber(i);

  if(isPrime(triNum)==false){
    divNum = howManyDivisors(triNum);
  }

  console.log(i);
  console.log(triNum);
  console.log(divNum);
  // console.log(divNum);


  if(divNum > 500){
  	return triNum;
  }

  i++;
}